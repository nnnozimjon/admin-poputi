import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Grid, Card, Text, Group, Title, Table, Badge, Box } from '@mantine/core';
import { IconUsers, IconCar, IconReport, IconCoin } from '@tabler/icons-react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Legend } from 'recharts';
import { summary, revenueTrend, tripDistribution, recentTrips, userGrowth, statusColors } from './constants';
const iconMap = {
    users: IconUsers,
    car: IconCar,
    coin: IconCoin,
    report: IconReport,
};
export default function DashboardWidget() {
    return (_jsxs(Box, { p: "md", children: [_jsx(Grid, { gutter: "md", children: summary.map((item) => {
                    const Icon = iconMap[item.icon];
                    return (_jsx(Grid.Col, { span: { base: 12, sm: 6, md: 3 }, children: _jsx(Card, { shadow: "sm", padding: "lg", radius: "md", withBorder: true, children: _jsxs(Group, { children: [_jsx(Icon, { color: item.color, size: 32 }), _jsxs("div", { children: [_jsx(Text, { size: "xs", c: "dimmed", mb: 4, children: item.label }), _jsx(Text, { size: "xl", fw: 700, c: item.color, children: item.value })] })] }) }) }, item.label));
                }) }), _jsxs(Grid, { gutter: "md", mt: "md", children: [_jsx(Grid.Col, { span: { base: 12, md: 8 }, children: _jsxs(Card, { shadow: "sm", padding: "lg", radius: "md", withBorder: true, children: [_jsx(Title, { order: 5, mb: "sm", children: "Revenue Trend" }), _jsx(ResponsiveContainer, { width: "100%", height: 220, children: _jsxs(LineChart, { data: revenueTrend, margin: { top: 10, right: 20, left: 0, bottom: 0 }, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "name" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, { type: "monotone", dataKey: "value", stroke: "#228be6", strokeWidth: 2, dot: true })] }) })] }) }), _jsx(Grid.Col, { span: { base: 12, md: 4 }, children: _jsxs(Card, { shadow: "sm", padding: "lg", radius: "md", withBorder: true, children: [_jsx(Title, { order: 5, mb: "sm", children: "Trip Distribution" }), _jsx(ResponsiveContainer, { width: "100%", height: 220, children: _jsxs(PieChart, { children: [_jsx(Pie, { data: tripDistribution, dataKey: "value", nameKey: "name", cx: "50%", cy: "50%", outerRadius: 60, innerRadius: 40, label: false, children: tripDistribution.map((entry, idx) => (_jsx(Cell, { fill: entry.color }, `cell-${idx}`))) }), _jsx(Legend, { verticalAlign: "bottom", height: 36 })] }) })] }) })] }), _jsxs(Card, { shadow: "sm", padding: "lg", radius: "md", withBorder: true, mt: "md", children: [_jsx(Title, { order: 5, mb: "sm", children: "Recent Trips" }), _jsxs(Table, { striped: true, highlightOnHover: true, withTableBorder: true, withColumnBorders: true, children: [_jsx(Table.Thead, { children: _jsxs(Table.Tr, { children: [_jsx(Table.Th, { children: "Trip ID" }), _jsx(Table.Th, { children: "Driver" }), _jsx(Table.Th, { children: "Route" }), _jsx(Table.Th, { children: "Status" }), _jsx(Table.Th, { children: "Passengers" }), _jsx(Table.Th, { children: "Revenue" })] }) }), _jsx(Table.Tbody, { children: recentTrips.map((trip) => (_jsxs(Table.Tr, { children: [_jsx(Table.Td, { children: trip.id }), _jsx(Table.Td, { children: trip.driver }), _jsx(Table.Td, { children: trip.route }), _jsx(Table.Td, { children: _jsx(Badge, { color: statusColors[trip.status], variant: "light", children: trip.status }) }), _jsx(Table.Td, { children: trip.passengers }), _jsxs(Table.Td, { children: ["$", trip.revenue] })] }, trip.id))) })] })] }), _jsxs(Card, { shadow: "sm", padding: "lg", radius: "md", withBorder: true, mt: "md", children: [_jsx(Title, { order: 5, mb: "sm", children: "User Growth" }), _jsx(ResponsiveContainer, { width: "100%", height: 220, children: _jsxs(LineChart, { data: userGrowth, margin: { top: 10, right: 20, left: 0, bottom: 0 }, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "name" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, { type: "monotone", dataKey: "users", stroke: "#228be6", strokeWidth: 2, dot: true })] }) })] })] }));
}
